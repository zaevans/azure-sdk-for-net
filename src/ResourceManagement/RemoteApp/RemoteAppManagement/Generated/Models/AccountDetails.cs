// Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.RemoteApp.Models
{
    using System;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// The details of an account.
    /// </summary>
    public partial class AccountDetails
    {
        /// <summary>
        /// The account subscriptionId
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Name of the workspace
        /// </summary>
        [JsonProperty(PropertyName = "workspaceName")]
        public string WorkspaceName { get; set; }

        /// <summary>
        /// The maximum number of apps per collection
        /// </summary>
        [JsonProperty(PropertyName = "maxPublishedAppsPerService")]
        public int? MaxPublishedAppsPerService { get; set; }

        /// <summary>
        /// The maximum number of users per collection
        /// </summary>
        [JsonProperty(PropertyName = "maxUsersPerService")]
        public int? MaxUsersPerService { get; set; }

        /// <summary>
        /// Whether or not desktops are enabled on this account
        /// </summary>
        [JsonProperty(PropertyName = "isDesktopEnabled")]
        public bool? IsDesktopEnabled { get; set; }

        /// <summary>
        /// The maximum number of collections
        /// </summary>
        [JsonProperty(PropertyName = "maxServices")]
        public int? MaxServices { get; set; }

        /// <summary>
        /// The URL users can go to to access available apps
        /// </summary>
        [JsonProperty(PropertyName = "rdWebUrl")]
        public string RdWebUrl { get; set; }

        /// <summary>
        /// Admin-defined URL to the privacy statement
        /// </summary>
        [JsonProperty(PropertyName = "privacyUrl")]
        public string PrivacyUrl { get; set; }

        /// <summary>
        /// The home location for the account
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

    }
}
